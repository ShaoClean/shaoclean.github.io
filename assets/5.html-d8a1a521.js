import{_ as n,a0 as s,a1 as a,a4 as t}from"./framework-786d5328.js";const e={},p=t(`<h1 id="生产环境刷新页面页面丢失" tabindex="-1"><a class="header-anchor" href="#生产环境刷新页面页面丢失" aria-hidden="true">#</a> 生产环境刷新页面页面丢失</h1><p>场景：</p><ul><li>1.Vue3 + WebHashRouter(HashRouter 配置如下)</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_URL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种情况在本地没有出现，一开始排查问题的时候，还以为是 App 中一段逻辑造成的：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">if</span> <span class="token punctuation">(</span>route<span class="token punctuation">.</span>path <span class="token operator">!==</span> <span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在开发场景下，如果刷新页面则直接回到<code>login</code>页面。但是在生产环境下，直接页面 404 了，还有一个 nginx 的标记。</p><p>所以我搜索了一些 nginx 的文章，还真是这个东西造成的。</p><p>需要在 nginx 文件中这样配置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>location / <span class="token punctuation">{</span>
		try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.html<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>-f <span class="token variable">$request_filename</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		rewrite <span class="token punctuation">(</span>.*<span class="token punctuation">)</span> /index.html<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此完美解决，由于我用的是宝塔面板，所以需要这样配置：</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7374/image-20230117224810411.png" alt="image-20230117224810411"></p><p>网上找到的解释是这样的</p><blockquote><p>格式 1：try_files file ... uri; 格式 2：try_files file ... =code; 大概的意思是：</p><ul><li>按指定的 file 顺序查找存在的文件，并使用第一个找到的文件进行请求处理</li><li>查找路径是按照给定的 root 或 alias 为根路径来查找的</li><li>如果给出的 file 都没有匹配到，则重新请求最后一个参数给定的 uri，就是新的 location 匹配</li><li>如果是格式 2，如果最后一个参数是 = 404 ，若给出的 file 都没有匹配到，则最后返回 404 的响应码</li></ul></blockquote>`,14),i=[p];function o(c,l){return s(),a("div",null,i)}const r=n(e,[["render",o],["__file","5.html.vue"]]);export{r as default};
