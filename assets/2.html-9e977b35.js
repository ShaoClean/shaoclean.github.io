import{_ as i,a0 as l,a1 as a,a4 as e}from"./framework-16947f8e.js";const t={},o=e('<h1 id="计算机网络" tabindex="-1"><a class="header-anchor" href="#计算机网络" aria-hidden="true">#</a> 计算机网络</h1><h2 id="udp和tcp" tabindex="-1"><a class="header-anchor" href="#udp和tcp" aria-hidden="true">#</a> UDP和TCP</h2><p><strong>UDP（User Datagram Protocol）用户数据报协议</strong></p><ol><li>UDP支持向同一个局域网内的计算机进行单播、多播、广播；也就是说UDP支持一对一、一对多、一对全的通信。</li><li>UDP是无连接、面向应用报文的</li><li>UDP向上层提供无连接不可靠传输服务，适用于IP电话、视屏会议等实时应用</li><li>首部开销较小，仅8个字节</li></ol><p><strong>TCP（Transmission Control Protocal）传输控制协议</strong></p><ol><li><p>在传输数据之前必须经过三次握手建立连接，连接之后会有一条基于TCP连接的可靠信道。</p></li><li><p>TCP仅支持单播，也就是单播。</p></li><li><p>发送方的TCP把应用进程交付下来的数据块看成一连串的、无结构的字节流，TCP并不知道这些待传送的字节流的含义，仅将他们编号，并存储在自己的发送缓存中。TCP根据发送策略（滑动窗口？？），从发送缓存中提取一定数量的字节构建TCP报文段并发送</p></li><li><p>接收方的TCP从TCP报文段中取出数据载荷部分并存储在接收缓存中，一方面将接收缓存中的一些字节交付给应用进程</p></li><li><p>TCP是面向字节流的可靠传输（使用流量控制和拥塞控制）</p></li><li><p>TCP向上层提供面向连接的可靠传输服务（适用于要求可靠传输的应用，例如文件传输）</p></li><li><p>首部最小20字节、最大60字节</p></li></ol>',6),r=[o];function n(p,s){return l(),a("div",null,r)}const P=i(t,[["render",n],["__file","2.html.vue"]]);export{P as default};
