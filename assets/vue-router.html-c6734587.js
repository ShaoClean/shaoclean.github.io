import{_ as n,a0 as s,a1 as a,a4 as e}from"./framework-786d5328.js";const t={},p=e(`<h1 id="vue-router-踩坑系列" tabindex="-1"><a class="header-anchor" href="#vue-router-踩坑系列" aria-hidden="true">#</a> Vue Router 踩坑系列</h1><p>记录一下在 vue router 中踩得坑</p><h2 id="beforerouteenter" tabindex="-1"><a class="header-anchor" href="#beforerouteenter" aria-hidden="true">#</a> beforeRouteEnter</h2><p>在 V3 的 setup 函数中是没有办法使用<code>beforeRouteEnter</code>函数的，我之前想用这个函数在组件内实现一个单独的页面是否可以进入。</p><p>也是踩了不少坑，找了挺多资料的。</p><p>说一下最接近我内心想法的一个解决方案，使用<code>路由独享守卫</code>，具体用法如下:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;business-list&#39;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/pages/home/business/BusinessList.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;主页&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">beforeEnter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">to</span><span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">from</span><span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">next</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;----beforeEnter----&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在路由配置里面单独的加一个<code>beforeEnter</code>函数，具体用法和<code>beforeRouteEnter</code>最接近。</p><p>还有一个解决方法就是在全局前置守卫<code>beforeEach</code>中控制，用<code>to</code>参数做一下判断就可以了</p>`,9),o=[p];function c(r,l){return s(),a("div",null,o)}const u=n(t,[["render",c],["__file","vue-router.html.vue"]]);export{u as default};
