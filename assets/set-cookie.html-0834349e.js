import{_ as a,a0 as t,a1 as p,a2 as n,a5 as o,a6 as e,a4 as c,C as l}from"./framework-786d5328.js";const i={},u=c(`<h1 id="set-cookie时出现的问题" tabindex="-1"><a class="header-anchor" href="#set-cookie时出现的问题" aria-hidden="true">#</a> set-cookie时出现的问题</h1><p>1.如果正常请求，没有出现跨域的情况下，是可以实现正常的set-cookie的</p><p>2.在本地调试的时候，vue项目的服务器在5173端口。Node后端的服务器在4000端口，这个时候发起请求就会出现跨域的情况，导致cookie默认无法写入到本地中</p><p>那么解决这个跨域的方式就是在后端服务器中使用cors中间件</p><ul><li>1.安装<code>npm i cors</code></li><li>2.使用 cors解决跨域<code>app.use(cors());</code></li></ul><p>3.此时虽然解决了跨域的问题，前端在请求的时候不会报跨域问题的错误，但是又出现新的问题，那就是无法正常的设置cookie。</p><p>前端请求后端服务用的是axios，可以使用<code>axios.defaults.withCredentials = true</code></p><p>意思是允许携带身份信息，用来设置是否支持发送cookie凭证信息的字段。</p><p>设置完毕之后会发现有报错了：</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7374/image-20220928233734655.png" alt="image-20220928233734655"></p><p>可以理解为这是一条http协议或者CORS的规则。</p><p>就是当request中设置了withCredentials : true,也就是请求携带了验证身份信息时</p><p>response的Access-Control-Allow-Origin : *,（而是应该有请求身份过滤） 否则的话，请求会失败。</p><p>这个报错看上去类似于是跨域的问题，但并不是。说白了就是后端没允许cookie过去…</p><p>另外，Access-Control-Allow-Origin设置为<em>时cookie不会出现在http的请求头里，所以报错里说Access-Control-Allow-Origin不能是</em>也是有道理的。</p><blockquote><p>此外还有一个问题，OPTIONS请求无法通过。</p><p>我们知道，OPTIONS请求是因为前端发送了“非简单请求”，比如Content-Type: &#39;application/json&#39;</p><p>如果后端失误（或者根本不知道有OPTIONS这种请求），就有可能把OPTIONS挡住，导致无法通过。</p><p>在不修改后端的情况下，也是有办法解决这个问题的，就是调整Content-Type: &#39;application/x-www-form-urlencoded&#39;</p><p>同时将传输的JSON进行一次序列化（可以用querystring进行转换），这样也能解决问题。</p></blockquote><p>后端需要配置的关键地方：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">// 配置请求源</span>
    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Origin&#39;</span><span class="token punctuation">,</span>  <span class="token string">&#39;http://localhost:5173&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Headers&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Content-Type, Content-Length, Authorization, Accept, X-Requested-With, &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 允许携带验证信息</span>
    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Credentials&#39;</span><span class="token punctuation">,</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token comment">// 允许请求方法</span>
    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Methods&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;PUT, POST, GET, DELETE, OPTIONS&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">&#39;OPTIONS&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_2022-10-5新增" tabindex="-1"><a class="header-anchor" href="#_2022-10-5新增" aria-hidden="true">#</a> 2022.10.5新增</h1><p><strong>设置session时出现的问题</strong></p><p>在设置session时出现了同样的报错信息，暂时无法解决，苦苦百度了一晚上无法解决，找不到适合的解决方案，非常的痛苦。</p><p>无论我怎么修改<code>app.all()</code>中的<code>Access-Control-Allow-Origin</code>配置，它都显示为<code>*</code></p><h1 id="_2022-10-6新增" tabindex="-1"><a class="header-anchor" href="#_2022-10-6新增" aria-hidden="true">#</a> 2022.10.6新增</h1><p><strong>解决设置session时跨域的问题</strong></p><p>昨天晚上苦苦思索的问题终于解决了，依旧出现跨域的原因是，将<code>app.use(cors())</code>放在了<code>app.all()</code>之后。</p><p>我是这么理解的：</p><p><code>app.all()</code>中是配置请求头中的一些信息，其中就包括了允许跨域的信息。在这里面将<code>Access-Control-Allow-Origin</code>的值设置成指定的origin，即<code>http://localhost:5173</code></p><p>而<code>app.use(cors())</code>也就是默认的将<code>Access-Control-Allow-Origin</code>的值设置成了通配符<code>*</code>。</p><p>所以在前端发送请求的时候，无论我怎么修改<code>app.all()</code>中的<code>Access-Control-Allow-Origin</code>配置，它都将显示为<code>*</code>。</p><p>所以解决方案是将<code>app.use(cors())</code>放在了<code>app.all()</code>之前。</p><p><strong>验证session出现undefined的问题</strong></p><p>虽然解决了跨域的问题，但是在使用<code>/check</code>接口验证session的时候，一直出现验证不通过的返回提示。</p><p>打印了一下后端的接口日志，发现根本取不到session中的值，他的值一直是undefined。</p><p>原因是前端在第一次发送请求的时候，没有设置允许携带身份信息。</p><p>看一下我之前写的：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span>  <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>

axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>withCredentials <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> logininfo <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">account</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">psw</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//这里如果想要真正使用，需要删去withCredentials或改为true</span>
    axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:4000/login&quot;</span><span class="token punctuation">,</span>logininfo<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">withCredentials</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">checkSesstion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:4000/check&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  account:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logininfo.account<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
  psw:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logininfo.psw<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkSesstion<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>check session<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我在解决上一个问题的时候，虽然设置了<code>axios.defaults.withCredentials = true;</code></p><p>但是在<code>/login</code>这个请求中单独设置了，<code>{withCredentials : false}</code></p><p>当我把这个删除之后，就可以了</p><p>具体代码见：</p>`,40),r=n("strong",null,"一个简单的可用session代码",-1);function k(d,v){const s=l("RouterLink");return t(),p("div",null,[u,n("ul",null,[n("li",null,[o(s,{to:"/demo/session-demo.html"},{default:e(()=>[r]),_:1})])])])}const m=a(i,[["render",k],["__file","set-cookie.html.vue"]]);export{m as default};
