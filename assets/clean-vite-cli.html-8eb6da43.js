import{_ as e,a0 as t,a1 as o,a2 as a,a3 as n,a6 as c,a4 as p,C as i}from"./framework-16947f8e.js";const r={},l=p(`<h1 id="cyou-js" tabindex="-1"><a class="header-anchor" href="#cyou-js" aria-hidden="true">#</a> cyou-js</h1><h1 id="亮点" tabindex="-1"><a class="header-anchor" href="#亮点" aria-hidden="true">#</a> 亮点</h1><ul><li>分布式动态路由+懒加载</li><li>路由权限校验，自动设置标题</li><li>请求、响应拦截（axios二次封装）</li><li>复杂分支优化</li></ul><h1 id="clean-vite-cli-使用说明" tabindex="-1"><a class="header-anchor" href="#clean-vite-cli-使用说明" aria-hidden="true">#</a> clean-vite-cli 使用说明</h1><h2 id="token验证流程" tabindex="-1"><a class="header-anchor" href="#token验证流程" aria-hidden="true">#</a> token验证流程</h2><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7374/1的副本.png" alt="1的副本"></p><h2 id="请求服务" tabindex="-1"><a class="header-anchor" href="#请求服务" aria-hidden="true">#</a> 请求服务</h2><p>封装的请求服务在<code>src/utils/http.ts</code>中</p><p>其中请求的基础地址根据启动项目的不同命令来决定</p><ul><li>开发环境启动命令：</li></ul><p><code>npm run dev</code>:该命令启动开发环境，同时使用<code>.env.dev</code>文件中的环境变量</p><ul><li>生产环境启动命令：</li></ul><p><code>npm run prod</code>:该命令启动生产环境，同时使用<code>.env.prod</code>文件中的环境变量</p><p>其中已经定义了<code>VITE_SERVICE_URL</code>这个环境变量，且这个变量已经在<code>http.ts</code>中使用，只需要根据自己的需求在两个环境变量的文件中修改对应的值即可。</p><p>如需修改环境变量的名称，需要在<code>http.ts</code>、<code>.env.dev</code>、<code>.env.prod</code>这三个文件中同时将<code>VITE_SERVICE_URL</code>替换成需要的变量名</p><p>启动服务时，根据不同的环境使用不同的环境变量值。</p><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h2><h3 id="基础组件" tabindex="-1"><a class="header-anchor" href="#基础组件" aria-hidden="true">#</a> 基础组件</h3><p>基础组件的文件路径：<code>/src/base</code></p><h4 id="_1-基础页面-basepage" tabindex="-1"><a class="header-anchor" href="#_1-基础页面-basepage" aria-hidden="true">#</a> 1.基础页面（BasePage）</h4><ul><li><p><strong>组件路径</strong>：<code>/src/base/BasePage/BasePage.vue</code></p></li><li><p><strong>介绍</strong>：包含具有导航功能的导航栏（页头）、标签栏（页脚）页面框架。</p></li></ul><h5 id="导航栏" tabindex="-1"><a class="header-anchor" href="#导航栏" aria-hidden="true">#</a> 导航栏</h5><h5 id="标签栏" tabindex="-1"><a class="header-anchor" href="#标签栏" aria-hidden="true">#</a> 标签栏</h5><p>**介绍：**基础页面的页脚部分，通过对<code>Tabbar</code>组件的二次封装</p><ul><li><code>BaseFooter</code>的 props 类型：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">BaseFooterType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">//导航栏标题</span>
  barName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  <span class="token comment">//图标名称</span>
  iconName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  img<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">//图片激活状态下的地址</span>
    activeSrc<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    <span class="token comment">//图片未激活状态下的地址</span>
    inactiveSrc<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  router<span class="token operator">?</span><span class="token operator">:</span> BasePageRouterType
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">BasePageRouterType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  query<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  param<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26),d={href:"http://vant3.uihtm.com/#/zh-CN/icon",target:"_blank",rel:"noopener noreferrer"};function u(h,k){const s=i("ExternalLinkIcon");return t(),o("div",null,[l,a("p",null,[n("注意：iconName 和 img 只能显示一个，其中 iconName 的优先级比较高，iconName 的值来源于 vant 组件库 Icon 的 name 值，"),a("a",d,[n("查看更多"),c(s)])])])}const m=e(r,[["render",u],["__file","clean-vite-cli.html.vue"]]);export{m as default};
