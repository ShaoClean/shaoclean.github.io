import{_ as s,a0 as t,a1 as o,a2 as n,a3 as a,a6 as r,a4 as c,C as p}from"./framework-16947f8e.js";const l={},i=c(`<h1 id="record类型" tabindex="-1"><a class="header-anchor" href="#record类型" aria-hidden="true">#</a> Record类型</h1><p><code>Record</code>类型用于定义一个对象的键值对类型</p><p>它接收两个泛型参数：</p><ul><li>key type</li><li>value type</li></ul><p>例如：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> p<span class="token operator">:</span>Person <span class="token operator">=</span> <span class="token punctuation">{</span>
  age<span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span>
  salary<span class="token operator">:</span><span class="token string">&quot;20k&quot;</span><span class="token comment">//wrong,不能将类型“string”分配给类型“number”</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),d={href:"https://blog.csdn.net/qq_43869822/article/details/121664818",target:"_blank",rel:"noopener noreferrer"};function u(k,m){const e=p("ExternalLinkIcon");return t(),o("div",null,[i,n("p",null,[a("扩展：Partial 、 Required 、 Readonly、 Pick 、 Exclude 、 Extract 、 Omit类型，"),n("a",d,[a("点我查看详情"),r(e)])])])}const v=s(l,[["render",u],["__file","Record.html.vue"]]);export{v as default};
