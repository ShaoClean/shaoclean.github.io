import{_ as n,a0 as s,a1 as a,a4 as e}from"./framework-786d5328.js";const t={},p=e(`<h1 id="字符串中带有斜杠的路径" tabindex="-1"><a class="header-anchor" href="#字符串中带有斜杠的路径" aria-hidden="true">#</a> 字符串中带有斜杠的路径</h1><p>今天工作中遇到的问题.</p><p>具体场景是： 通过消息队列获取到算法返回的数据，返回的数据是一个带有路径的字符串，这个字符串还有别的字符。</p><p>需要匹配这个字符串中的路径最后一位是否是数字。</p><p>之前一直陷入了一个误区：认为字符串中带有的反斜杠一定是转译用的。今天在浏览器的控制台打印了一下，实际上非也。</p><p>字符串中用于转译用途的只有反斜杠，没有其它字符：<code>&#39;\\&#39;</code>这种用法。</p><p>其余的类似：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> &#39;a ba a ba \\a ba\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>就是表示反斜杠的意思</p><p>然后记录一下我是如何解决的：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> returnData <span class="token operator">=</span> <span class="token string">&#39;&quot;Aready save in path D:\\\\\\\\workspace\\\\\\\\model\\\\\\\\1123&quot;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fullPath <span class="token operator">=</span> <span class="token string">&#39;&quot;Aready save in path D:\\\\workspace\\\\model\\\\&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 这里正则中的两个反斜杠（\`\\\\\`） 中的的第一个 \\ 表示转译，第二个才是真正的表示反斜杠</span>
<span class="token keyword">const</span> newFullPath <span class="token operator">=</span> fullPath<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\\\</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;\\\\\\\\\\\\\\\\&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newFullPath<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Aready save in path D:\\\\\\\\workspace\\\\\\\\model\\\\\\\\</span>

<span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>newFullPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\\\d+&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// /&quot;Aready save in path D:\\\\\\\\workspace\\\\\\\\model\\\\\\\\\\d+&quot;/</span>

<span class="token keyword">const</span> res <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>returnData<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","path-regexp.html.vue"]]);export{r as default};
