import{_ as e,a0 as c,a1 as a,a4 as o}from"./framework-16947f8e.js";const h={},t=o('<h1 id="hashurl" tabindex="-1"><a class="header-anchor" href="#hashurl" aria-hidden="true">#</a> HashUrl</h1><p>hash地址有一个特征，以<code>#</code>作为标记，<code>#</code>之后的所有地址都算做是hash地址，并且不会出现在<code>location</code>对象中的<code>search</code>字段中，而是出现在<code>hash</code>中</p><p>在地址栏输入地址:<code>http://localhost:5173/#/test</code>，结果如下：</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7374/image-20220918012814167.png" alt="image-20220918012814167"></p><p>最近项目组上遇到了这个问题，光听项目经理说了一下，然后我想到了可能会有两种原因。在我印象里面，我当时使用了一个匹配地址栏token的一个方法，这个方法也是上一个做项目的同事留下来的。这个方法是没有问题的，但是光听我也不能十分的确定，只能说非常的有可能罢了。</p><p>第一个原因，当时是从<code>location.search</code>中来匹配的，但那个项目是用的hash地址，按常理来说是不能获取到token的。但是我当时走的时候，为什么能用成功呢？而且我有印象的是，那个token也出现在了search这个属性中，这就好奇怪了。</p><p>第二个原因，我猜测是地址没有写对。我这几天测试了一下，在跳转链接的那个地方，需要把<code>/#/</code>这个也带上，不然就会出现跳转后不论你链接你里面写的是什么东西，即便是些出花来，到最后只会显示默认的路由地址，直接把拼接过来的参数给覆盖掉了（依然还会先显示拼接过来的参数，但是过一瞬间地址栏就发生了改变）</p>',7),s=[t];function d(r,n){return c(),a("div",null,s)}const i=e(h,[["render",d],["__file","hash-url.html.vue"]]);export{i as default};
