import{_ as e,a0 as o,a1 as c,a2 as n,a3 as s,a5 as t,a6 as p,a4 as l,C as i}from"./framework-786d5328.js";const u={},r=n("h1",{id:"文件上传",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#文件上传","aria-hidden":"true"},"#"),s(" 文件上传")],-1),k=n("p",null,"在此之前需要完成的步骤：",-1),d=n("li",null,[s("npm i multer "),n("ul",null,[n("li",null,"Multer 是一个node.js中间件，用于处理 multipart/form-data类型的表单数据，主要用于上传文件。"),n("li",null,"在form表单上要加上 enctype=“multipart/form-data” 的属性。"),n("li",null,"Multer 不会处理任何非 multipart/form-data 类型的表单数据。"),n("li",null,"不要将 Multer 作为全局中间件使用，因为恶意用户可以上传文件到一个你没有预料到的路由，应该只在你需要处理上传文件的路由上使用。")])],-1),m=n("li",null,"npm i fs(用于重命名文件的名字或指定路径)",-1),v=l(`<p>安装完成以上的中间件后，导入并初始化相对应的中间件实例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> cors <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;cors&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> multer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;multer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//dest为multer最基本的配置项，用于指定存放文件的路径</span>
<span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token string">&#39;./assets/&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关键代码如下:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/upload&#39;</span><span class="token punctuation">,</span>upload<span class="token punctuation">.</span><span class="token function">single</span><span class="token punctuation">(</span><span class="token string">&#39;avatar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>body<span class="token punctuation">,</span>file<span class="token punctuation">}</span> <span class="token operator">=</span> req<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span>body<span class="token punctuation">,</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">,</span>file<span class="token punctuation">)</span>
    <span class="token comment">//判断文件是否存在</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 获取文件类型</span>
        <span class="token keyword">const</span> fileNameArr <span class="token operator">=</span> file<span class="token punctuation">.</span>originalname<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> fileType <span class="token operator">=</span> fileNameArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// rename的参数1: 原文件的路径和文件名(没有后缀名无法显示)</span>
        <span class="token comment">// 		 参数2: 修改后的文件路径和文件名(有后缀名可以显示)</span>
        <span class="token comment">// 		 参数3: 回调函数</span>
        fs<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token string">&quot;./assets/&quot;</span> <span class="token operator">+</span> file<span class="token punctuation">.</span>filename<span class="token punctuation">,</span><span class="token string">&quot;./assets/&quot;</span> <span class="token operator">+</span> file<span class="token punctuation">.</span>filename <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> fileType<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
            res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">code</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
                <span class="token literal-property property">info</span><span class="token operator">:</span><span class="token string">&quot;upload success!&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，前端在formData对象中添加的属性名和<code>upload.single(&#39;avatar&#39;)</code>中的<code>avatar</code>保持一致，否则会报500错误</p>`,5);function f(b,g){const a=i("RouterLink");return o(),c("div",null,[r,k,n("ul",null,[n("li",null,[s("npm i cors(或者其他解决跨域的方案亦可，另一种解决指定域名的方案可参考"),t(a,{to:"/study/backend/nodeJS/set-cookie.html"},{default:p(()=>[s("此文章")]),_:1}),s(")")]),d,m]),v,n("p",null,[s("具体完整代码见"),t(a,{to:"/demo/upload-demo.html"},{default:p(()=>[s("这里")]),_:1})])])}const y=e(u,[["render",f],["__file","upload.html.vue"]]);export{y as default};
